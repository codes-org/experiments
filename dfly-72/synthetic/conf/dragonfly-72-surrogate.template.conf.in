LPGROUPS
{
   MODELNET_GRP
   {
      repetitions="36";
# name of this lp changes according to the model
      nw-lp="2";
# these lp names will be the same for dragonfly-custom model
      modelnet_dragonfly_dally="2";
      modelnet_dragonfly_dally_router="1";
   }
}
PARAMS
{
# packet size in the network
   packet_size="${PACKET_SIZE}";
   modelnet_order=( "dragonfly_dally","dragonfly_dally_router" );
   # scheduler options
   modelnet_scheduler="fcfs";
# chunk size in the network (when chunk size = packet size, packets will not be
# divided into chunks)
   chunk_size="${CHUNK_SIZE}";
# modelnet_scheduler="round-robin";
# number of routers in group
   num_routers="4";
# number of groups in the network
   num_groups="9";
# buffer size in bytes for local virtual channels
   local_vc_size="16384";
#buffer size in bytes for global virtual channels
   global_vc_size="16384";
#buffer size in bytes for compute node virtual channels
   cn_vc_size="32768";
#bandwidth in GiB/s for local channels
   local_bandwidth="2.0";
# bandwidth in GiB/s for global channels
   global_bandwidth="2.0";
# bandwidth in GiB/s for compute node-router channels
   cn_bandwidth="2.0";
# ROSS message size
   message_size="624";
# number of compute nodes connected to router, dictated by dragonfly config
# file
   num_cns_per_router="2";
# number of global channels per router
   num_global_channels="2";
# network config file for intra-group connections
   intra-group-connections="${CONFIG_DIR}/dfdally-72-intra";
# network config file for inter-group connections
   inter-group-connections="${CONFIG_DIR}/dfdally-72-inter";
# routing protocol to be used
   routing="minimal";
# folder path to store packet latency from terminal to terminal, if no value is given it won't save anything
   save_packet_latency_path="${PACKET_LATENCY_TRACE_PATH}";
# router buffer occupancy snapshots
   router_buffer_snapshots=( ${BUFFER_SNAPSHOTS} );
}
NETWORK_SURROGATE {
   enable="1"; # options: 0 or 1
# determines the director switching from surrogate to high-def simulation strategy
   director_mode="at-fixed-virtual-times";

# director configuration for: director_mode == "at-fixed-virtual-times"
# timestamps at which to switch to surrogate-mode and back
   fixed_switch_timestamps=( ${SWITCH_TIMESTAMPS} );

# latency predictor to use. Options: average, torch-jit
   packet_latency_predictor="${PREDICTOR_TYPE}";
# some workload models need some time to stabilize, a point where the network behaviour stabilizes. The predictor will ignore all packet latencies that arrive during this period
   ignore_until="${IGNORE_UNTIL}";

# parameters for torch-jit latency predictor
   torch_jit_mode="single-static-model-for-all-terminals";
   torch_jit_model_path="${TORCH_JIT_MODEL_PATH}";

# selecting network treatment on switching to surrogate. Options: frezee, nothing
   network_treatment_on_switch="${NETWORK_TREATMENT}";
}
